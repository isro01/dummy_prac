Hello World!

This is just for practice of git commands ;)

#1 Creating a Repo:

->Click on new repo and give a name to your repo. Make it public or private as per your wish. Initialise it with
  README.md and add 'gitignore (to ignore certain type of files in a commit) and License.
->Open Terminal and make a new dir and create a text file (just an example).
->Do "git init" in this dir.
->Then add the origin "git remote add origin (link of your repo on github)"
->Then to extract the README.md in your dir do "git pull origin master"
->Now add the files you want to commit "git add file name"
->To push the commit do "git push origin master" NOTE: This pushes the changes(commit) to the master branch. (More on this later)

#2 Generating a pull request:

->Firstly do a "git pull origin master" to get the latest changes.
->Then create a new branch to work in. (see the commands list)
->Inside the branch do the required changes.
->Do "git add ." and "git commit -m "___" ".
->Now without switching branches do "git push origin (name of your new branch)".
->Now go to github and you'll see a button saying generate a new pull request. Click on it and write a description(optional)
  to generate a pull request which can be reviewd by your peers and finally merged into master branch.

#3 Working with SSH

->First check for existing SSH keys on your computer using "ls -al ~/.ssh". File names of public keys are one of the following:
  id_rsa.pub
  id_ecdsa.pub
  id_ed25519.pub
->Generate new SSH key "ssh-keygen -t rsa -b 4096 -C {your_email@example.com}". (Use email account associated with GiHub).
  Default file to store the keys is /home/you/.ssh/id_rsa
->Add SSH key to ssh-agent (So you don't have to type passphrase everytime)
  $ eval "$(ssh-agent -s)"
  $ ssh-add ~/.ssh/id_rsa (or whatever the name of your key file is)
->Add SSH jey to your github account 
  sudo apt-get install xclip
  xclip -sel clip < ~/.ssh/id_rsa.pub (will add the content in id_rsa.pub to your clipboard)
  Now go to your Github account ->Settings->Add SSH key and paste your key there
->Test your SSH connection by writing "ssh -T git@github.com"

#4 Working with submodules

->Submodule is used when you're trying to add another git repo to your repo. In such a case instead of doing "git add"
  we do "git submodule add <url>" url is the link to the repo which you're adding.
->Now if you've done some changes in the repo which now you want to add, you need to FORK the repo first, then make the changes,
  push it, and now add the link to this forked repo.
->What this does is create a link between the repo.
->If after adding (git add) everything, you see modified content error in git status and want to start over adding do "git reset"
->To remove the added file from index do git rm -f --cached (file path)

#5 Forking a repo